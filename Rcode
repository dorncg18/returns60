library("plyr")
library("ggplot2")
library("dplyr")
install.packages("Quandl")
library("Quandl")
SPData <- Quandl("YAHOO/INDEX_SPY", authcode="LxBtxt6KuGwfd5b8eP_p")
SPDatabackup <- SPData #I found I would make a mistake and want to start over, so I save this here so I don't have to query from the web again
for(i in 1:nrow(SPData)){SPData$Chg[i] <- (SPData$Close[i] - SPData$Close[i+1])}
for(i in 1:nrow(SPData)){SPData$VWAC[i] <- crossprod(SPData$Chg[i:(i+59)],SPData$Volume[i:(i+59)])/sum(SPData$Volume[i:(i+59)])}
for(i in 1:nrow(SPData)){SPData$VWACyy[i] <- SPData$VWAC[i] - SPData$VWAC[(i+250)]} 
for(i in 1:nrow(SPData)){SPData$VWACY[i] <- SPData$VWAC[(i+250)]}
SPData <- arrange(SPData, Date) #arrange with most recent dates on top, makes the next calculation much cleaner
for(i in 1:nrow(SPData)){SPData$Return60[i] <- (SPData$Close[i+60] / SPData$Close[i]-1)}
#VWACyy and Return60 should both have a number of NA values, the below will determine what is the last row in each column (without NAs) and remove all the NAs
lowremove <- max(which(is.na(SPData$VWACyy)))
highremove <- min(which(is.na(SPData$Return60)))
highdate <- SPData$Date[highremove]
lowdate <- SPData$Date[lowremove]
SPData <- subset(SPData, SPData$Date < highdate)
SPData <- subset(SPData, SPData$Date > lowdate)
#highremove and lowremove work with max and min, respectively, because of the order of the df
#confirm that there are no NAs
which(is.na(SPData$Return60))
which(is.na(SPData$VWACyy))
ggplot(SPData, aes(SPData$VWAC, SPData$Return60)) + geom_point()
cor(SPData$VWAC, SPData$Return60)
ggplot(SPData, aes(SPData$VWAC, SPData$VWACyy)) + geom_point()
cor(SPData$VWAC, SPData$VWACyy)
ggplot(SPData, aes(SPData$VWAC, SPData$VWACY)) + geom_point()
cor(SPData$VWAC, SPData$VWACY)
# There is a high correlation between the difference of VWACyy(the VWAC now minus the VWAC one year ago), but little correlation between the VWAC now and the VWAC one year ago. 
#Higher corrleation after 2004
SPDaf2004 <- filter(SPData, Year >= 2004)
split <- sample.split(SPDaf2004$Return60, SplitRatio = 0.8)
train <- subset(SPDaf2004, split == TRUE)
test <- subset(SPDaf2004, split == FALSE)

#add new column in data frame that just gives year, could be useful for coloring a plot to examine correlations as HFT has increased
SPData <- mutate(SPData, Year = substr(SPData$Date,1,4) %>% as.numeric)
#returns all unique years. could be used to create many different variables in 
unique(SPData$Year, FALSE)
SPData1995 <- filter(SPData, Year == 1995)
SPData1996 <- filter(SPData, Year == 1996)
SPData1997 <- filter(SPData, Year == 1997)
SPData1998 <- filter(SPData, Year == 1998)
SPData1999 <- filter(SPData, Year == 1999)
SPData2000 <- filter(SPData, Year == 2000)
SPData2001 <- filter(SPData, Year == 2001)
SPData2002 <- filter(SPData, Year == 2002)
SPData2003 <- filter(SPData, Year == 2003)
SPData2004 <- filter(SPData, Year == 2004)
SPData2005 <- filter(SPData, Year == 2005)
SPData2006 <- filter(SPData, Year == 2006)
SPData2007 <- filter(SPData, Year == 2007)
SPData2008 <- filter(SPData, Year == 2008)
SPData2009 <- filter(SPData, Year == 2009)
SPData2010 <- filter(SPData, Year == 2010)
SPData2011 <- filter(SPData, Year == 2011)
SPData2012 <- filter(SPData, Year == 2012)
SPData2013 <- filter(SPData, Year == 2013)
SPData2014 <- filter(SPData, Year == 2014)
rm(SPData1995,SPData1996, SPData1997,SPData1998,SPData1999,SPData2000,SPData2001,SPData2002,SPData2003,SPData2004,SPData2005,SPData2006,SPData2007,SPData2008,SPData2009,SPData2010,SPData2011,SPData2012,SPData2013,SPData2014)
graph <- ggplot(SPData, aes(VWAC, VWACY))
graph + geom_point(aes(colour = SPData$Return60)) +  scale_colour_gradientn(colours=rainbow(4))
ggplot(SPData, aes(VWAC, VWACY)) + geom_point(aes(colour = SPData$Return60)) +  scale_colour_gradientn(colours=rainbow(4))
cor(SPData2014$VWAC,SPData2014$Return60)
cor(SPData2013$VWAC,SPData2013$Return60)
cor(SPData2012$VWAC,SPData2012$Return60)
cor(SPData2011$VWAC,SPData2011$Return60)
cor(SPData2010$VWAC,SPData2010$Return60)
cor(SPData2009$VWAC,SPData2009$Return60)
cor(SPData2008$VWAC,SPData2008$Return60)
cor(SPData2007$VWAC,SPData2007$Return60)
cor(SPData2006$VWAC,SPData2006$Return60)
cor(SPData2005$VWAC,SPData2005$Return60)
cor(SPData2004$VWAC,SPData2004$Return60)
cor(SPData2003$VWAC,SPData2003$Return60)
cor(SPData2002$VWAC,SPData2002$Return60)
cor(SPData2001$VWAC,SPData2001$Return60)
cor(SPData2000$VWAC,SPData2000$Return60)

ggplot(SPData2014,aes(VWAC,Return60))+geom_point()
ggplot(SPData2013,aes(VWAC,Return60))+geom_point()
ggplot(SPData2012,aes(VWAC,Return60))+geom_point()
ggplot(SPData2011,aes(VWAC,Return60))+geom_point()
ggplot(SPData2010,aes(VWAC,Return60))+geom_point()
ggplot(SPData2009,aes(VWAC,Return60))+geom_point()
ggplot(SPData2008,aes(VWAC,Return60))+geom_point()
ggplot(SPData2007,aes(VWAC,Return60))+geom_point()
ggplot(SPData2006,aes(VWAC,Return60))+geom_point()
ggplot(SPData2005,aes(VWAC,Return60))+geom_point()
ggplot(SPData2004,aes(VWAC,Return60))+geom_point()
ggplot(SPData2003,aes(VWAC,Return60))+geom_point()
ggplot(SPData2002,aes(VWAC,Return60))+geom_point()
ggplot(SPData2001,aes(VWAC,Return60))+geom_point()
ggplot(SPData2000,aes(VWAC,Return60))+geom_point()
ggplot(SPData1999,aes(VWAC,Return60))+geom_point()
ggplot(SPData1998,aes(VWAC,Return60))+geom_point()
ggplot(SPData1997,aes(VWAC,Return60))+geom_point()
ggplot(SPData1996,aes(VWAC,Return60))+geom_point()
ggplot(SPData1995,aes(VWAC,Return60))+geom_point()
ggplot(SPData, aes(Close, VWACY))+geom_point(aes(colour = SPData$Year)) + scale_colour_gradientn(colours=rainbow(20))
