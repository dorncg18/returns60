library("plyr")
library("ggplot2")
library("dplyr")
library("Quandl")
library("caTools")

SPData <- Quandl("YAHOO/INDEX_SPY", authcode="LxBtxt6KuGwfd5b8eP_p")

#I found I would make a mistake and want to start over, so I save this here so I don't have to query from the web again
SPDatabackup <- SPData 

#create a 1-day change in the column
for(i in 1:nrow(SPData)){
  SPData$Chg[i] <- (SPData$Close[i] - SPData$Close[i+1])
  }

#multiplies the change value * volume all divided by volume to create a volume weighted change value 
for(i in 1:nrow(SPData)){
  SPData$VWAC[i] <- crossprod(SPData$Chg[i:(i+59)],SPData$Volume[i:(i+59)])/sum(SPData$Volume[i:(i+59)])
  }

#brings in value of VWAC 250 trading days ago (VWACyy likely correlated because it is the difference, rather just the value)
for(i in 1:nrow(SPData)){
  SPData$VWACY[i] <- SPData$VWAC[(i+250)]
  }

#arrange with most recent dates on top, makes the next calculation much cleaner
SPData <- arrange(SPData, Date) 

#get returns for exactly 60 days after today 
for(i in 1:nrow(SPData)){
  SPData$Return60[i] <- (SPData$Close[i+60] / SPData$Close[i]-1)
  }

#VWACyy and Return60 should both have a number of NA values, the below will determine what is the last row in each column (without NAs) and remove all the NAs
lowremove <- max(which(is.na(SPData$VWACY)))
highremove <- min(which(is.na(SPData$Return60)))
highdate <- SPData$Date[highremove]
lowdate <- SPData$Date[lowremove]
SPData <- subset(SPData, SPData$Date < highdate)
SPData <- subset(SPData, SPData$Date > lowdate)

#highremove and lowremove work with max and min, respectively, because of the order of the df

#confirm that there are no NAs
which(is.na(SPData$Return60))
which(is.na(SPData$VWACyy))
rm("highdate", "highremove","i","lowdate", "lowremove")

ggplot(SPData, aes(SPData$VWAC, SPData$Return60)) + geom_point()
cor(SPData$VWAC, SPData$Return60)
ggplot(SPData, aes(SPData$VWAC, SPData$VWACY)) + geom_point()
cor(SPData$VWAC, SPData$VWACY)

#add new column in data frame that just gives year, could be useful for coloring a plot to examine correlations as HFT has increased
SPData <- mutate(SPData, Year = substr(SPData$Date,1,4) %>% as.numeric)

#look at correlation after 2004
SPDaf2004 <- filter(SPData, SPData$Year >= 2004)

library(caTools)
set.seed(12)
split <- sample.split(SPDaf2004$Return60, SplitRatio = 0.8)
train <- subset(SPDaf2004, split == TRUE)
test <- subset(SPDaf2004, split == FALSE)
model <- lm(Return60 ~ VWAC + VWACY, data = SPDaf2004)
summary(model)
predict <- predict(model, newdata = test)
plot <- as.data.frame(cbind(predict, test$Return60, test$Year))
ggplot(plot, aes(predict, V2))+geom_point(colour = plot$V3)


set.seed(12)
SPData2014 <- filter(SPData, SPData$Year == 2014)
split2014 <- sample.split(SPData2014$Return60, SplitRatio = 0.5)
train2014 <- subset(SPData2014, split == TRUE)
test2014 <- subset(SPData2014, split == FALSE)
model2014 <- lm(Return60 ~ VWAC, data = SPData2014)
summary(model2014)
predict2014 <- predict(model2014, newdata = test2014)
plot2014 <- as.data.frame(cbind(predict2014, test2014$Return60, test2014$Year))
ggplot(plot2014, aes(predict2014, V2))+geom_point(colour = plot2014$V3)

